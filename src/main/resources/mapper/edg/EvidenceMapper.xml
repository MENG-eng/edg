<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzdl.edg.mapper.EvidenceMapper">

    <resultMap type="com.hzdl.edg.domain.Evidence" id="EvidenceResult">
        <result property="id"    column="id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="fileName"    column="file_name"    />
        <result property="evidenceType"    column="evidence_type"    />
        <result property="evidenceTypeName"    column="evidence_type_name"    />
        <result property="heat"    column="heat"    />
        <result property="description"    column="description"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectEvidenceVo">
        select id, dept_id, file_name, evidence_type, evidence_type_name, heat, description, del_flag, create_by, create_time, update_by, update_time from edg_evidence
    </sql>

    <select id="selectTimeAncestor" resultType="com.hzdl.edg.domain.vo.EvidenceRefreshVo">
        select e.evidence_type typeId, min.evidence_id, min.min_create_time, max.create_time max_create_time, max.ancestors
        from
            (select evidence_id, MIN(create_time) min_create_time
            from edg_evidence_node
            where del_flag=0
            group by evidence_id) min
        LEFT JOIN
            (select n.evidence_id, n.create_time, n.ancestors
            from edg_evidence_node n,
                (select MAX(create_time) max_create_time
                    from edg_evidence_node
                    where del_flag=0
                    group by evidence_id) t
                where n.create_time=t.max_create_time and n.del_flag=0) max on min.evidence_id=max.evidence_id
         LEFT JOIN edg_evidence e on max.evidence_id=e.id
    </select>
    <select id="selectCopiedEviIds" resultType="java.lang.Long">
        select distinct evidence_id
        from
            edg_evidence_node
        where id in
            (select distinct parent_id
            from edg_evidence_node
            where opt_type='COPY'
            and del_flag=0)
        and del_flag=0
    </select>
    <select id="selectEvidenceList" parameterType="com.hzdl.edg.domain.Evidence" resultMap="EvidenceResult">
        <include refid="selectEvidenceVo"/>
        <where>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
            <if test="fileName != null and fileName != ''"> and file_name like concat('%', #{fileName}, '%')</if>
            <if test="params != null and params.types != null"> and evidence_type in
                <foreach collection="params.types" item="type" open="(" close=")" separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null"> and create_time between #{startTime} and #{endTime}</if>
            and del_flag = 0
        </where>
        order by create_time desc
    </select>

    <select id="selectEvidenceById" parameterType="Long" resultMap="EvidenceResult">
        <include refid="selectEvidenceVo"/>
        where id = #{id}
    </select>

    <select id="personalEvidenceList" resultType="com.hzdl.edg.domain.vo.EvidenceListVO">
        SELECT
        e.id,
        e.file_name fileName,
        e.evidence_type_name evidenceTypeName,
        e.description,
        e.heat,
        e.create_time createTime,
        n.id originNodeId,
        n.version originVersion
        FROM edg_evidence e
        INNER JOIN edg_evidence_node n
        ON e.id = n.evidence_id
        AND (n.opt_type = 'CREATE' or n.opt_type = 'COPY')
        <if test="deptId != null">and e.dept_id = #{deptId} and n.dept_id = #{deptId}</if>
        where e.del_flag = 0 AND n.del_flag = 0
        ORDER BY n.create_time DESC
        limit 3
    </select>

    <select id="personalEvidenceNodeListLatest" resultType="com.hzdl.edg.domain.vo.EvidenceNodeVO">
        select e.file_name fileName,
            e.evidence_type_name evidenceTypeName,
            en.id nodeId,
            en.evidence_id evidenceId,
            en.opt_type optType,
            en.description,
            en.total_size totalSize,
            en.version,
            en.operator_name operator,
            en.create_time evidenceNodeCreateTime
        from edg_evidence_node en
        left join edg_evidence e
        on en.evidence_id = e.id and en.del_flag = 0
        <where>
            <if test="deptId != null">en.dept_id = #{deptId}</if>
            and e.del_flag = 0
        </where>
        order by en.create_time desc
        limit 3
    </select>

    <select id="allEvidenceNodeListLatest" resultType="com.hzdl.edg.domain.vo.EvidenceNodeVO">
        select e.file_name fileName,
            e.evidence_type_name evidenceTypeName,
            en.id nodeId,
            en.evidence_id evidenceId,
            en.opt_type optType,
            en.description,
            en.total_size totalSize,
            en.version,
            en.operator_name operator,
            en.create_time evidenceNodeCreateTime
        from edg_evidence_node en
        left join edg_evidence e
        on en.evidence_id = e.id
        where en.del_flag = 0 and e.del_flag = 0
        order by en.create_time desc
        limit 10
    </select>

    <select id="personalEvidenceNodeList" resultType="com.hzdl.edg.domain.vo.EvidenceNodeVO">
        select e.file_name fileName,
            e.evidence_type_name evidenceTypeName,
            en.id nodeId,
            en.evidence_id evidenceId,
            en.opt_type optType,
            en.description,
            en.total_size totalSize,
            en.version,
            en.operator_name operator,
            en.create_time evidenceNodeCreateTime
        from edg_evidence_node en
        left join edg_evidence e
        on en.evidence_id = e.id
        <where>
            <if test="deptId != null"> and en.dept_id = #{deptId}</if>
            <if test="beginDate != null and endDate != null"> and en.create_time between #{beginDate} and #{endDate}</if>
            <if test="optType != null"> and en.opt_type = #{optType}</if>
            <if test="fileName != null"> and e.file_name like concat('%', #{fileName},'%') </if>
            <if test="types != null"> and e.evidence_type in
                <foreach collection="types" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            and en.del_flag = 0
        </where>
        order by en.create_time desc
    </select>
    <select id="traceCenterList" parameterType="com.hzdl.edg.domain.Evidence" resultMap="EvidenceResult">
        <include refid="selectEvidenceVo"/>
        <where>
            <if test="evidence.fileName != null  and evidence.fileName != ''"> and file_name like concat('%', #{evidence.fileName}, '%')</if>
            <if test="types != null"> and evidence_type in
                <foreach collection="types" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            and del_flag = 0
        </where>
        order by heat desc
    </select>

    <select id="evidenceStatistics" resultType="com.hzdl.edg.domain.vo.EvidenceStatisticsVO">
        select count(case when opt_type = 'CREATE' then id end) totalEvidenceCount,
               sum(case when DATE_FORMAT(create_time, '%Y-%m-%d') = CURDATE() and opt_type = 'CREATE' then 1 else 0 end) todayEvidenceCount,
               sum(case when DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_SUB(CURDATE(), INTERVAL 1 DAY) and opt_type = 'CREATE' then 1 else 0 end) yesterdayEvidenceCount,
               sum(case when DATE_FORMAT(create_time, '%Y-%m-%d') = CURDATE() and opt_type = 'COPY' then 1 else 0 end) todayEvidenceCopyCount,
               sum(case when DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_SUB(CURDATE(), INTERVAL 1 DAY) and opt_type = 'COPY' then 1 else 0 end) yesterdayEvidenceCopyCount
        from edg_evidence_node
        where del_flag = 0
    </select>

    <select id="userActivity" resultType="java.lang.Double">
       select sum(case when DATE_ADD(login_date, INTERVAL 30 DAY) >= CURDATE() then 1 else 0 end) / count(user_id)
       from sys_user
       where del_flag = 0
    </select>

    <select id="evidenceTypeStatistics" resultType="com.hzdl.edg.domain.vo.StatisticsVO">
        select evidence_type_name name, count(id) cnt
        from edg_evidence
        where del_flag = 0
        group by evidence_type_name
    </select>

    <select id="validFileName" resultType="java.lang.Boolean">
        select count(id) > 0 from edg_evidence where file_name = #{fileName} and del_flag = 0
    </select>

    <select id="evidenceAndExceptionStatistics"
            resultType="com.hzdl.edg.domain.vo.EvidenceAndExceptionStatisticsVO">
        select DATE_FORMAT(e.create_time, '%Y-%m-%d') date, count(e.id) evidenceCnt, count(ee.id) exceptionCnt
        from edg_evidence e
        left join edg_evidence_exception ee
        on e.id = ee.evidence_id
        where e.del_flag = 0
        group by date
    </select>

    <select id="evidenceMonthStatistics" resultType="com.hzdl.edg.domain.vo.StatisticsVO">
        select
	    c.date_list name,
	    count(e.id) cnt
        from sys_calendar c
	    left join edg_evidence e
	    on c.date_list = DATE_FORMAT(e.create_time, '%Y-%m-%d') and e.evidence_type = #{evidenceTypeId}
        where DATE_FORMAT(c.date_list, '%Y%m') = DATE_FORMAT(curdate(), '%Y%m')
        group by name
        order by name
    </select>

    <select id="allEvidenceList" resultType="com.hzdl.edg.domain.vo.EvidenceListVO">
        SELECT
        e.id,
        e.file_name fileName,
        e.evidence_type_name evidenceTypeName,
        e.description,
        e.heat,
        e.create_time createTime,
        n.id originNodeId,
        n.version originVersion
        FROM
        edg_evidence e
        INNER JOIN edg_evidence_node n ON e.id = n.evidence_id
        AND n.opt_type = 'CREATE'
        <where>
            <if test="fileName != null  and fileName != ''"> and e.file_name like concat('%', #{fileName}, '%')</if>
            <if test="evidenceType != null  and evidenceType != ''"> and e.evidence_type = #{evidenceType}</if>
            <if test="startTime != null and endTime != null"> and e.create_time between #{startTime} and #{endTime}</if>
            AND e.del_flag = 0
            AND n.del_flag = 0
        </where>
        ORDER BY n.create_time DESC
    </select>

    <select id="myEvidenceList" resultType="com.hzdl.edg.domain.vo.EvidenceListVO">
        SELECT
        e.id,
        e.file_name fileName,
        e.evidence_type_name evidenceTypeName,
        e.description,
        e.heat,
        e.create_time createTime,
        n.id originNodeId,
        n.version originVersion
        FROM
        edg_evidence e
        INNER JOIN edg_evidence_node n ON e.id = n.evidence_id
        AND n.opt_type = 'CREATE'
        <where>
            <if test="deptId != null">AND e.dept_id = #{deptId} AND n.dept_id = #{deptId}</if>
            <if test="fileName != null  and fileName != ''"> and e.file_name like concat('%', #{fileName}, '%')</if>
            <if test="params.types != null"> and e.evidence_type in
                <foreach collection="params.types" item="type" open="(" close=")" separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null"> and e.create_time between #{startTime} and #{endTime}</if>
            AND e.del_flag = 0
            AND n.del_flag = 0
        </where>
        ORDER BY n.create_time DESC
    </select>

    <select id="copyEvidenceList" resultType="com.hzdl.edg.domain.vo.EvidenceListVO">
        SELECT
            e.id,
            e.file_name fileName,
            e.evidence_type_name evidenceTypeName,
            e.description,
            e.heat,
            n.create_time createTime,
            n.id originNodeId,
            n.version originVersion
        FROM
            edg_evidence e
            INNER JOIN edg_evidence_node n ON e.id = n.evidence_id
            AND n.opt_type = 'COPY'
        <where>
            <if test="deptId != null"> and n.dept_id = #{deptId}</if>
            <if test="fileName != null and fileName != ''"> and e.file_name like concat('%', #{fileName}, '%')</if>
            <if test="params.types != null"> and e.evidence_type in
                <foreach collection="params.types" item="type" open="(" close=")" separator=",">
                    #{type}
                </foreach>
            </if>
            <if test="startTime != null and endTime != null"> and e.create_time between #{startTime} and #{endTime}</if>
            AND e.del_flag = 0
            AND n.del_flag = 0
        </where>
        ORDER BY n.create_time DESC
    </select>

	<select id="countGroupByDeptdeptId" parameterType="Long" resultType="Integer">
		select count(1) from edg_evidence where dept_id=#{deptId}
	</select>
    <insert id="insertEvidence" parameterType="com.hzdl.edg.domain.Evidence" useGeneratedKeys="true" keyProperty="id">
        insert into edg_evidence
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">dept_id,</if>
            <if test="fileName != null and fileName != ''">file_name,</if>
            <if test="evidenceType != null and evidenceType != ''">evidence_type,</if>
            <if test="evidenceTypeName != null and evidenceTypeName != ''">evidence_type_name,</if>
            <if test="heat != null">heat,</if>
            <if test="description != null">description,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">#{deptId},</if>
            <if test="fileName != null and fileName != ''">#{fileName},</if>
            <if test="evidenceType != null and evidenceType != ''">#{evidenceType},</if>
            <if test="evidenceTypeName != null and evidenceTypeName != ''">#{evidenceTypeName},</if>
            <if test="heat != null">#{heat},</if>
            <if test="description != null">#{description},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateEvidence" parameterType="com.hzdl.edg.domain.Evidence">
        update edg_evidence
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="fileName != null and fileName != ''">file_name = #{fileName},</if>
            <if test="evidenceType != null and evidenceType != ''">evidence_type = #{evidenceType},</if>
            <if test="evidenceTypeName != null and evidenceTypeName != ''">evidence_type_name = #{evidenceTypeName},</if>
            <if test="heat != null">heat = #{heat},</if>
            <if test="description != null">description = #{description},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>
    <update id="updateEvidenceHeat" parameterType="com.hzdl.edg.domain.Evidence">
        update edg_evidence set heat = #{heat} where id = #{id}
    </update>

    <delete id="deleteEvidenceById" parameterType="Long">
        update edg_evidence set del_flag = 1 where id = #{id}
    </delete>

    <delete id="deleteEvidenceByIds" parameterType="String">
        update edg_evidence set del_flag = 1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
